name: Workflow
run-name: ${{ github.actor }} runs a pipeline
on:
  push:
    branches: [ "stage", "main" ]
  pull_request:
    branches: [ "stage", "main" ]

jobs:
  tests:
    name: tests
    uses: ./.github/workflows/tests.yml

  release:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install dependencies
        run: |
          npm install --save-dev semantic-release \
          @semantic-release/changelog \
          @semantic-release/git \
          @semantic-release/npm \
          @semantic-release/github \
          npm ci

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

  build-and-push:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker tags
        run: |
          IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          VERSION_TAG="${GITHUB_REF##*/}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "DOCKER_TAG_LATEST=latest" >> $GITHUB_ENV
          echo "DOCKER_TAG_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "DOCKER_TAG_VERSION=${VERSION_TAG}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG_LATEST }} \
                       -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG_SHA }} \
                       -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG_VERSION }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG_LATEST }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG_SHA }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG_VERSION }}